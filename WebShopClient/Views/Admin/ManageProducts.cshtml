@model WebShopClient.ViewModels.ManageProductsViewModel

@{
    ViewData["Title"] = "Manage Products";
}

<h2>Manage Products</h2>

<table class="table table-striped">
    <thead>
        <tr>
            <th>Name</th>
            <th>Description</th>
            <th>Price</th>
            <th>Quantity</th>
            <th>Actions</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var product in Model.Products)
        {
            <tr>
                <td>@product.Name</td>
                <td>@product.Description</td>
                <td>@product.Price</td>
                <td>
                    @if (product.Quantity > 0)
                    {
                        @product.Quantity
                    }
                    else
                    {
                        <span class="text-danger">Out of stock!</span>
                    }
                </td>
                <td class="d-flex gap-2">
                    <button class="btn btn-warning btn-sm"
                            data-bs-toggle="modal"
                            data-bs-target="#editModal"
                            data-url="@Url.Action("EditProductPartial", "Admin", new { id = product.Id })"
                            data-title="Edit Product">
                        Edit
                    </button>

                    @if (product.Discount != null)
                    {
                        <button class="btn btn-success btn-sm"
                                data-bs-toggle="modal"
                                data-bs-target="#editModal"
                                data-url="@Url.Action("GetProductDiscountPartial", "Admin", new { id = product.Id })"
                                data-title="Active Campaign">
                            See campaign
                        </button>
                    }
                    else
                    {
                        <button class="btn btn-info btn-sm"
                                data-bs-toggle="modal"
                                data-bs-target="#editModal"
                                data-url="@Url.Action("CreateDiscountPartial", "Admin", new { id = product.Id })"
                                data-title="Add Campaign">
                            Add campaign
                        </button>
                    }

                    <form method="post" asp-action="DeleteProduct" asp-route-id="@product.Id">
                        <button type="submit" class="btn btn-danger btn-sm"
                                onclick="return confirm('Are you sure you want to delete this product?');">
                            Delete
                        </button>
                    </form>
                </td>
            </tr>
        }
    </tbody>
</table>

@if (TempData["SuccessMessage"] != null)
{
    <div class="alert alert-success alert-dismissible fade show" role="alert">
        <i class="bi bi-check-circle"></i>
        @TempData["SuccessMessage"]
        <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
    </div>
}

<!-- Modal for editing product -->
<div class="modal fade" id="editModal" tabindex="-1" aria-labelledby="modalTitle" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="modalTitle">Edit Product</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body" id="modalContent">
                <!-- Partial views -->
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        function initializeDiscountForm() {
            var periodElement = document.getElementById('period');
            var startDateElement = document.getElementById('startDate');
            var endDateElement = document.getElementById('endDate');

            function calculateEndDate() {
                var period = periodElement.value;
                var startDate = startDateElement.value;
                if (startDate && period) {
                    var start = new Date(startDate);
                    var end = new Date(start);
                    end.setDate(start.getDate() + parseInt(period));
                    endDateElement.value = end.toISOString().split('T')[0];
                }
            }

            if (periodElement) {
                periodElement.addEventListener('change', calculateEndDate);
            }

            startDateElement.value = new Date().toISOString().split('T')[0];
            periodElement.value = "14";
            calculateEndDate();
        }

        document.addEventListener('DOMContentLoaded', function () {
            var editModal = document.getElementById('editModal');
            editModal.addEventListener('show.bs.modal', function (event) {
                var button = event.relatedTarget;
                var url = button.getAttribute('data-url');
                var title = button.getAttribute('data-title');
                var modalContent = document.getElementById('modalContent');
                var modalTitle = document.getElementById('modalTitle');

                modalTitle.textContent = title; // Set the modal title

                fetch(url)
                    .then(response => response.text())
                    .then(html => {
                        modalContent.innerHTML = html;
                        $.validator.unobtrusive.parse(modalContent); // Reinitialize validation
                        if (title === "Add Campaign") {
                            initializeDiscountForm(); // Initialize discount form scripts
                        }
                    });
            });
        });
    </script>
    @await Html.PartialAsync("_ValidationScriptsPartial")
}
